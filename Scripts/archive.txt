old S-T calculation for cuts.py:
    def f_a(x):
        return -5 + 12 * np.log(x)

    def f_b(x):
        return 3 - 4 * np.log(x)

    def f_c(x, y):
        mask = np.isclose(x, y, rtol=1e-10)
        result = np.zeros_like(x)
        result[~mask] = ((x[~mask] + y[~mask]) / 2) - ((x[~mask] * y[~mask]) / (x[~mask] - y[~mask])) * np.log(x[~mask] / y[~mask])
        return result
    
    alpha = 1/137
    nu = 246    
        
    dataframe['S'] = (1/(72 * np.pi * ((dataframe['x2']**2 - dataframe['x1']**2) ** 3))) * ((dataframe['x2'] ** 6) * f_a(dataframe['x2']) - 
                                                                                ((dataframe['x1'] ** 6) * f_a(dataframe['x1'])) + 
                                                                                (9 * ((dataframe['x2'] * dataframe['x1']) ** 2) * 
                                                                                ((dataframe['x2'] ** 2)) * f_b(dataframe['x2']) - 
                                                                                (dataframe['x1'] ** 2) * f_b(dataframe['x1']))
                                                                                )

    dataframe['T'] = (1/(32 * (np.pi ** 2) * alpha * (nu ** 2))) * (f_c(dataframe['MDP'] ** 2, dataframe['MD2'] ** 2) + 
                                                                f_c(dataframe['MDP'] ** 2, dataframe['MD1'] ** 2) -
                                                                f_c(dataframe['MD2'] ** 2, dataframe['MD1'] ** 2)
                                                                )

================================================================================================================================================================================================================================================================